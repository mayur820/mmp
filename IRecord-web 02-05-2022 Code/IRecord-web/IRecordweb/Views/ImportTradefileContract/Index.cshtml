@model IRecordweb.Models.ImportTradefileContract_INDEX_Models
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="author" content="#">

<link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />

<link rel="stylesheet" href="/css/bootstrap.min.v4.css" />
<link rel="stylesheet" href="/css/line-awesome.min.css" />
<link rel="stylesheet" href="/css/theme-color.css" />
<link rel="stylesheet" href="/css/app.min.css" />
<link rel="stylesheet" href="/css/custom-body.css" />


<script src="~/AngScripts/jquery-3.6.0.js"></script>
<script src="~/AngScripts/jquery-3.6.0.min.js"></script>
<script src="~/AngScripts/angular.js"></script>
<script src="~/AngScripts/ngStorage.min.js"></script>
<script src="//angular-ui.github.io/bootstrap/ui-bootstrap-tpls-1.0.3.js"></script>
<script src="~/js/select2.min.js"></script>
<link rel="stylesheet" href="~/css/select2.min.css" />
<script src="../js/popper.min.js"></script>


<script src="../js/metisMenu.min.js"></script>
<script src="../js/simplebar.min.js"></script>
<script src="../js/app.js"></script>
<!-- <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/line-awesome/1.3.0/line-awesome/css/line-awesome.min.css">

<link rel="stylesheet" href="~/css/bootstrap.min.v4.css">
<link rel="stylesheet" href="~/css/select2.min.css">
<link rel="stylesheet" href="~/css/style.css"> -->
@*<script type="text/javascript" src="main.js"></script>*@
<style>
    footer.footer {
        margin-bottom: -568px;
    }

    /* .btn-primary {
        color: #fff;
        background-color: #5b73e8 !important;
        border-color: #5b73e8 !important;
    } */
</style>


<div class="display_adds_parent">
    <div class="display_adds_view_box display_adds_2_col">

        <div class="col-12">
            <div class="page-title-box d-flex align-items-center justify-content-between">
                <h1 class="mb-0">Upload Trade File Contract Note</h1>

                <div class="page-title-right">
                    @Html.ActionLink("Back to List", "ViewImportTradefileContract", "", new { @class = "btn btn-dark" })
                </div>

            </div>
        </div>

        @using (Html.BeginForm("Index", "ImportTradefileContract", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="card member_master_par">
                <div class="card-body">
                    <div class="row form_2" id="data">

                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.EditorFor(model => model.FromDate, new { htmlAttributes = new { @class = "form-control", @readonly = true, @placeholder = "DD-MM-YYYY", @Value = Convert.ToDateTime(Session["FinFromDate"].ToString()).ToString("dd-MMM-yyyy") } })
                                @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="col-sm-12 col-md-6 mb-3 d-flex">
                                @Html.LabelFor(model => model.ToDate, htmlAttributes: new { @class = "control-label" })
                                <div class="w-100">
                                    @Html.EditorFor(model => model.ToDate, new { htmlAttributes = new { @class = "form-control", @readonly = true, @placeholder = "DD-MM-YYYY", @Value = Convert.ToDateTime(Session["FinToDate"].ToString()).ToString("dd-MMM-yyyy") } })
                                    @Html.ValidationMessageFor(model => model.ToDate, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        @*<div class="col-sm-12 col-md-6 mb-3 d-flex">
                                @Html.LabelFor(model => model.InvestmentType, htmlAttributes: new { @class = "control-label" })
                                <div class="w-100">
                                    @Html.DropDownListFor(model => model.InvestmentType, ViewBag.InvestmentType as SelectList, "Select Investment Type", htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.InvestmentType, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.Broker, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.DropDownListFor(model => model.Broker, ViewBag.Broker as SelectList, "Select Broker", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Broker, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            <label>Trade File Formate</label>
                            <div class="w-100">
                                @Html.DropDownListFor(model => model.ContractNoteId, new SelectList(" "), "Select Trade File", htmlAttributes: new { @class = "form-control select2" })
                                @Html.ValidationMessageFor(model => model.ContractNoteId, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.Consultant, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.DropDownListFor(model => model.Consultant, ViewBag.Consultant as SelectList, "Select Consultant", htmlAttributes: new { @class = "form-control select2" })
                                @Html.ValidationMessageFor(model => model.Consultant, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.Demat_Ac_Id, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.DropDownListFor(model => model.Demat_Ac_Id, ViewBag.Demat_Ac_Id as SelectList, "Select Demat A/c", htmlAttributes: new { @class = "form-control select2" })
                                @Html.ValidationMessageFor(model => model.Demat_Ac_Id, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.HoldingType, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                <select id="HoldingType" name="HoldingType" class="form-control select2">
                                    <option value="">Select Holding Type</option>
                                    <option value="0">I-Share Invenstment</option>
                                    <option value="1">T-Stock In Trade</option>
                                </select>

                                @Html.ValidationMessageFor(model => model.HoldingType, "", new { @class = "text-danger" })

                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.FileUpload, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.TextBoxFor(model => model.FileUpload, htmlAttributes: new { @class = "form-control", type = "file", value = "FileName" })
                                @Html.ValidationMessageFor(model => model.FileUpload, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="form-row">
                            <div class="col-sm-12 col-md-6 mb-3 d-flex">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                <div class="w-100">
                                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", @placeholder = "Enter Password" } })
                                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="col-sm-12 text-center mt-3">
                                <input type="submit" value="Upload" name="Upload" id="Upload" class="btn btn-primary" onclick="Savebtn()" />
                            </div>
                        </div>

                        <a href="javascript:;" class="text-center d-flex justify-content-center mt-3">
                            Display All Charges on First Upload of specific broker
                            Display Any Charges Which Are Not Matching
                        </a>

                        <div class="col-sm-12 text-center mt-3">
                            <input type="submit" value="Reset" class="btn btn-secondary" />

                            <input type="submit" value="Save" name="Save" id="Save" class="btn btn-primary" onclick="Savebtn()" />
                        </div>
                    </div>
                </div>

            </div>
        }

    </div>
    <div class="display_adds display_adds_right text-center">
        <div class="mobile_adds mb-3">
            <img src="https://via.placeholder.com/970x90.png/007BFF/FFFFFF?text=Irecord+Ads" alt="" />
        </div>
        <div class="desktop_adds">
            <img src="https://via.placeholder.com/160x601.png/007BFF/FFFFFF?text=Irecord+Ads" alt="" />
        </div>
    </div>
</div>



@section Scripts {
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

    <script src="~/AngularDataFunction/AngularDataFunction.js"></script>
    <script src="~/AngScripts/OpeningStock.js"></script>
    <script src="~/js/select2.min.js"></script>
    <link rel="stylesheet" href="~/css/select2.min.css" />
    <script src="../js/bootstrap.min.js"></script>
    <script src="../js/bootstrap-datepicker.min.js"></script>
    <script>
        $(document).ready(function () {
            var StartDate =@Session["FinFromDate"].ToString();
            var EndDate = @Session["FinToDate"].ToString();
            $("#FromDate1").datepicker({
                dateFormat: "dd-mm-yy",
                minDate : StartDate,
                maxDate : EndDate,
                changeMonth: true,
                changeYear: true
            });
            $("#ToDate1").datepicker({
                dateFormat: "dd-mm-yy",
                minDate : StartDate,
                maxDate : EndDate,
                changeMonth: true,
                changeYear: true
            });

            $(".select2").select2({
                maximumSelectionLength: 3
            });
        });
    </script>

    <script>
        $(document).ready(function () {
            // alert(11) ;
            $("#InvestmentType").change(function () {
                //  alert(12);
                debugger;
                $.get("/ImportTradefileContract/GetBrokerFormatList", { TypeId: $("#InvestmentType").val() }, function (data) {

                    $("#ContractNoteId").empty();
                    $.each(data, function (index, row) {
                        $("#ContractNoteId").append("<option value='" + row.BrokerId + "'>" + row.Broker + "</option>")
                    });
                });

            })
        });
    </script>

    <script>
        $(document).ready(function () {

            $("#Broker").focus();

            // alert(11) ;
            $("#Broker").change(function () {
                //  alert(12);
                debugger;
                $.get("/ImportTradefileContract/GetBrokerFormatList1", { ID: $("#Broker").val() }, function (data) {

                    $("#ContractNoteId").empty();
                    $.each(data, function (index, row) {
                        // alert(row.Broker);
                        $("#ContractNoteId").append("<option value='" + row.BrokerId + "'>" + row.Broker + "</option>")
                    });
                });

            })
        });
    </script>
}