@model IRecordweb.Models.SCRIPT

@{
    ViewBag.Title = "SaveScript";

}

<link href="~/Content/chosen.css" rel="stylesheet" />

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
<link href="~/js/bootstrap-multiselect.css" rel="stylesheet" />
@*<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-multiselect/0.9.16/css/bootstrap-multiselect.css" integrity="sha512-DJ1SGx61zfspL2OycyUiXuLtxNqA3GxsXNinUX3AnvnwxbZ+YQxBARtX8G/zHvWRG9aFZz+C7HxcWMB0+heo3w==" crossorigin="anonymous" referrerpolicy="no-referrer" />*@

<!-- <link href="~/Content/Multiselect.css" rel="stylesheet" />-->
<script src="~/Scripts/jquery-1.12.4.min.js"></script>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="~/Scripts/Multiselect.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>

<style>
    .isdisabled {
        color: currentColor;
        cursor: not-allowed;
        opacity: 0.5;
        text-decoration: none;
        pointer-events: none;
    }

    input.input-validation-error,
    select.input-validation-error {
        border: 1px solid red !important;
    }

    .form-check .form-check-input {
        float: left;
        margin-left: 0.5em !important;
    }
</style>

<div class="display_adds_parent">
    <div class="display_adds_view_box display_adds_2_col">

        <div class="col-12">
            <div class="page-title-box d-flex align-items-center justify-content-between">
                <h1 class="mb-0">Script Master</h1>

                <div class="page-title-right">
                    @Html.ActionLink("Back to List", "ScriptIndex", "", new { @class = "btn btn-dark" })
                </div>

            </div>
        </div>


        <div class="card scriptmaster_par">
            <div class="card-body">
                @using (Html.BeginForm("SaveScript", "ScriptMaster", FormMethod.Post))
                {
                    @Html.AntiForgeryToken()
                    <div class="row form_2">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.ScriptName, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.EditorFor(model => model.ScriptName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ScriptName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.BSECode, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.EditorFor(model => model.BSECode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BSECode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.NSECode, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.EditorFor(model => model.NSECode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NSECode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.IndustryID, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.EditorFor(model => model.IndustryID, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IndustryID, "", new { @class = "text-danger" })
                            </div>*@
                        @*</div>*@
                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.GroupName, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.EditorFor(model => model.GroupName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.GroupName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.IndustryID, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.DropDownListFor(m => m.IndustryID, ViewBag.IndustryID as SelectList, "Select Industry", htmlAttributes: new { @class = "form-control" })

                                @Html.ValidationMessageFor(model => model.IndustryID, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.SectorName, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.DropDownListFor(m => m.SectorName, ViewBag.SectorName as SelectList, "Select Sector", htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.SectorName, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.InvestmentType, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @*@Html.DropDownListFor(m => m.InvestmentType, ViewBag.InvestmentType as SelectList, "Select Investment Type", htmlAttributes: new {   })*@
                                @*@Html.ListBoxFor(m => m.scriptlist, ViewBag.InvestmentType as SelectList, new { @class = "form-control chosen select", id = "Multiselect", placeholder = "Select Investment Type", @multiple = "Multiple" })*@
                                @Html.ListBoxFor(m => m.scriptlist, ViewBag.InvestmentType as SelectList, new { @class = "form-control chosen select", id = "ddlInvestmentType", placeholder = "Select Investment Type", @multiple = "Multiple", @SelectionMode = "Multiple" })
                                @Html.ValidationMessageFor(model => model.InvestmentType, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        @*<div>
                                @Html.LabelFor(model => model.InvestmentType, htmlAttributes: new { @class = "control-label" })
                                @{
                                    if (ViewBag.InvestmentType != null)
                                        {
                                        <select id="ddlInvestmentType" multiple="multiple" required name="mySkillsName" class="form-control">


                                            @foreach (var item in ViewBag.InvestmentType)
                                                {
                                                if (item.Text != null)
                                                    {
                                                    <option value="@item.Value">
                                                        @item.Text
                                                    </option>
                                                    }
                                                }

                                        </select>
                                        }
                                }
                            </div>*@
                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.FaceValue, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.EditorFor(model => model.FaceValue, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FaceValue, "", new { @class = "text-danger" })

                                <div class="d-flex flex-wrap custom_checkbox hide" style="display:none">
                                    <div class="form-check hide" style="display:none">
                                        @Html.CheckBoxFor(model => model.Active, htmlAttributes: new { @Checked = true })
                                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-check" style="display:none">
                                        @Html.CheckBoxFor(model => model.IsMcx)
                                        @Html.LabelFor(model => model.IsMcx, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.IsMcx, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-check" style="display:none">
                                        @Html.CheckBoxFor(model => model.IsCurrency)
                                        @Html.LabelFor(model => model.IsCurrency, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.IsCurrency, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-check" style="display:none">
                                        @Html.CheckBoxFor(model => model.IsNcdx)
                                        @Html.LabelFor(model => model.IsNcdx, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.IsNcdx, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-check" style="display:none">
                                        @Html.CheckBoxFor(model => model.IsFO)
                                        @Html.LabelFor(model => model.IsFO, htmlAttributes: new { @class = "control-label" })
                                        @Html.ValidationMessageFor(model => model.IsFO, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.ISIN, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                @Html.EditorFor(model => model.ISIN, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MutualFundID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="col-sm-12 col-md-6 mb-3 d-flex">
                                @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="w-100">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(model => model.Active, htmlAttributes: new { @Checked = true })
                                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>*@
                        <!-- <div style="margin-left:120px">
                            <table>
                                <tr class="col-sm-12 col-md-6 mb-3 d-flex">
                                    <td>
                                        @Html.LabelFor(model => model.Active, htmlAttributes: new { @class = "control-label col-md-11" })
                                    </td>
                                    <td class="checkbox">
                                        @Html.CheckBoxFor(model => model.Active, htmlAttributes: new { @Checked = true })
                                    </td>
                                        @Html.ValidationMessageFor(model => model.Active, "", new { @class = "text-danger" })
                                    <td>
                                        @Html.LabelFor(model => model.IsMcx, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </td>
                                    <td class="checkbox">
                                        @Html.CheckBoxFor(model => model.IsMcx)
                                    </td>
                                        @Html.ValidationMessageFor(model => model.IsMcx, "", new { @class = "text-danger" })
                                    <td>
                                        @Html.LabelFor(model => model.IsCurrency, htmlAttributes: new { @class = "control-label col-md-2" })
                                    </td>
                                    <td class="checkbox">
                                        @Html.CheckBoxFor(model => model.IsCurrency)
                                    </td>
                                    @Html.ValidationMessageFor(model => model.IsCurrency, "", new { @class = "text-danger" })
                                    <td>
                                        @Html.LabelFor(model => model.IsNcdx, htmlAttributes: new { @class = "control-label col-md-1" })
                                    </td>
                                    <td class="checkbox">
                                        @Html.CheckBoxFor(model => model.IsNcdx)
                                    </td>

                                    @Html.ValidationMessageFor(model => model.IsNcdx, "", new { @class = "text-danger" })

                                    <td>
                                        @Html.LabelFor(model => model.IsFO, htmlAttributes: new { @class = "control-label col-md-1" })
                                    </td>
                                    <td class="checkbox">
                                        @Html.CheckBoxFor(model => model.IsFO)
                                    </td>
                                    @Html.ValidationMessageFor(model => model.IsFO, "", new { @class = "text-danger" })
                                </tr>
                            </table>
                        </div> -->
                        @*<div class="col-sm-12 col-md-6 mb-3 d-flex"></div>*@
                        @*<div class="col-sm-12 col-md-6 mb-3 d-flex">
                                @Html.LabelFor(model => model.ListType, htmlAttributes: new { @class = "control-label" })
                                <div class="w-100">
                                    <select id="ListType" name="ListType" class="form-select">
                                        <option value="">Select List Type</option>
                                        <option value="listed">listed</option>
                                        <option value="Unlisted">Unlisted</option>
                                    </select>
                                    @Html.ValidationMessageFor(model => model.ListType, "", new { @class = "text-danger" })
                                </div>
                            </div>*@
                        @*@if(Session["Role_Type"].ToString() != null)
                            {*@

                        <div class="col-sm-12 col-md-6 mb-3 d-flex">
                            @Html.LabelFor(model => model.ListType, htmlAttributes: new { @class = "control-label" })
                            <div class="w-100">
                                <select id="ListType" name="ListType" class="form-control">
                                    <option value="">Select List Type</option>
                                    <option value="listed">listed</option>
                                    <option value="Unlisted">Unlisted</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.ListType, "", new { @class = "text-danger" })
                            </div>
                        </div>
                        @*@if (Session["Role_Type"].ToString() == "ADMIN")
                            {

                            }
                            else
                            {
                                <div class="col-sm-12 col-md-6 mb-3 d-flex">
                                    @Html.LabelFor(model => model.ListType, htmlAttributes: new { @class = "control-label" })
                                    <div class="w-100">
                                        <select id="ListType" name="ListType" class="form-control">
                                            <option value="">Select List Type</option>
                                            <option value="listed">listed</option>

                                        </select>
                                        @Html.ValidationMessageFor(model => model.ListType, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                            }*@
                        <div class="col-md-12 text-center mt-3">
                            <input type="submit" value="Save" class="btn btn-primary" />
                            @*@if (Session["RoleName"].ToString() == "OPERATOR")
                                {
                                    <input type="submit" value="Save" class="btn btn-primary isdisabled" />
                                }
                                else
                                {

                                }*@
                        </div>
                    </div>
                }
            </div>
        </div>

    </div>
    <div class="display_adds display_adds_right text-center">
        <div class="mobile_adds mb-3">
            <img src="https://via.placeholder.com/970x90.png/007BFF/FFFFFF?text=Irecord+Ads" alt="" />
        </div>
        <div class="desktop_adds">
            <img src="https://via.placeholder.com/160x601.png/007BFF/FFFFFF?text=Irecord+Ads" alt="" />
        </div>
    </div>
</div>


@section Scripts
    {
    <script src="~/Scripts/jquery.validate.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
    @*<link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
        <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>*@
    <script>

        $(document).ready(function () {

            $("#ScriptName").focus();


        });
    </script>
    @if (ViewBag.Message != null)
    {
        <script type="text/javascript">
            window.onload = function () {
                alert('@ViewBag.Message');
            };
        </script>
    }
    <script>
        $(document).ready(function () {
            $("#Type").change(function () {
                alert('cards value has changed');
            });
        });

    </script>
    @*<script src="http://code.jquery.com/jquery-1.12.4.min.js"> </script>*@

    <script src="~/js/bootstrap-multiselect.js"></script>
    @*<script src="http://cdn.rawgit.com/davidstutz/bootstrap-multiselect/master/dist/js/bootstrap-multiselect.js"> </script>*@

    @*<script>

                $(document).ready(function () {
                    $('#Multiselect').select2();
                });
        </script>*@
    <script type="text/javascript">

        $.noConflict();
        jQuery(document).ready(function ($) {
            $('#ddlInvestmentType').multiselect({
                placeholder: 'Select options',
                buttonWidth: '100%',
                includeSelectAllOption: true,
                buttonClass: 'btn btn-default text-left'
            });

        });

                   //$(document).ready(function ($) {
                   //     $('#ddlInvestmentType').multiselect({
                   //         placeholder: 'Select options',
                   //         buttonWidth: '500px',
                   //         includeSelectAllOption: true

                   //     });

                   // });

                    //$(document).ready(function () {
                    //    $('#ddlIndustry').chosen();
                    //   });

                    //$(document).ready(function () {
                    //    $('#Multiselect1').select2({
                    //     selectOnClose: true
                    //    });
                    //});

                    //$(document).ready(function () {
                    //    // alert(111111111111111);
                    //    var data = document.getElementById('Multiselect').value;

                    //    $("#Multiselect option:selected").text();

                    //    $('#Multiselect').select2();
                    //});
    </script>
}