@model BAL.TradeFiles

@{
    ViewBag.Title = "SaveTradeFile";
}
<style>
    .table {
        display: block;
        overflow-x: auto;
        white-space: nowrap;
    }
</style>


<h2>Trade File</h2>


@using (Html.BeginForm("SaveTradeFile", "TradeFileUpload", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table style="margin:17px">
            <tr>
                <td class="form-group col-md-1">
                    @Html.LabelFor(model => model.InvestmentType, htmlAttributes: new { @class = "control-label" })
                </td>
                <td>
                    <div class="col-md-6">
                        @Html.DropDownListFor(model => model.InvestmentType, ViewBag.InvestmentType as SelectList, "Select Investment Type", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.InvestmentType, "", new { @class = "text-danger" })

                    </div>
                </td>
               
                <td class="form-group col-md-1">
                    @Html.LabelFor(model => model.Broker, htmlAttributes: new { @class = "control-label col-md-12" })
                </td>
                <td>
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Broker, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.DropDownListFor(model => model.Broker, ViewBag.Broker as SelectList, "Select Broker", htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Broker, "", new { @class = "text-danger" })
                    </div>
                </td>
                <td class="form-group col-md-1">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Config" name="Config" id="Config" class="btn btn-success" />
                        </div>
                    </div>
                </td>
                <td class="form-group col-md-1">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Import" name="Import" id="Import" class="btn btn-primary" />
                        </div>
                    </div>
                </td>
                <td class="form-group col-md-1">
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Close" name="Close" class="btn btn-danger" />
                        </div>
                    </div>
                </td>
            </tr>
        </table>
        <table id="tblconfig" style="display:none">
            <tr>
                <th>Trade File Configuration</th>
            </tr>
            <tr>
                <td>
                    @Html.LabelFor(model => model.FormatToImport, htmlAttributes: new { @class = "control-label col-md-12" })
                </td>
                <td>
                    @Html.TextBoxFor(model => model.FormatToImport, htmlAttributes: new { @class = "form-control" })
                </td>
            </tr>
        </table>
        <table id="tblimport" style="display:none">
            <tr>
                <td class="form-group">
                    @Html.Label("Select File", htmlAttributes: new { @class = "control-label col-md-12" })
                </td>
                <td>
                    <div class="col-md-20">
                        @Html.TextBoxFor(model => model.FilePath, htmlAttributes: new { @class = "form-control", type = "file", value = "FilePath" })
                    </div>
                </td>


                <td class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-12" })
                </td>
                <td>
                    <div class="col-md-20">
                        @Html.TextBoxFor(model => model.Password, htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </td>
            </tr>

            <tr>
                <td class="form-group">
                    @Html.LabelFor(model => model.Consultant, htmlAttributes: new { @class = "control-label col-md-12" })
                </td>
                <td class="col-md-20">
                    @Html.DropDownListFor(model => model.Consultant, ViewBag.Consultant as SelectList, "Select Consultant", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Consultant, "", new { @class = "text-danger" })
                </td>

                <td class="form-group">
                    @Html.LabelFor(model => model.DematAC, htmlAttributes: new { @class = "control-label col-md-12" })
                </td>
                <td class="col-md-20">
                    @Html.DropDownListFor(model => model.DematAC, ViewBag.DematAC as SelectList, "Select Demat A/C", htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DematAC, "", new { @class = "text-danger" })

                </td>
            </tr>
            <tr>
                <td class="form-group">
                    @Html.LabelFor(model => model.HoldingType, htmlAttributes: new { @class = "control-label col-md-12" })
                </td>
                <td class="col-md-20">
                    <select id="HoldingType" name="HoldingType" class="form-control">
                        <option value="0">Select Holding Type</option>
                        <option value="1">I-Share Investment</option>
                        <option value="2">T-Stock In Trade</option>
                    </select>
                    @Html.ValidationMessageFor(model => model.HoldingType, "", new { @class = "text-danger" })
                </td>

                <td class="form-group">
                    @Html.LabelFor(model => model.FromDate, htmlAttributes: new { @class = "control-label col-md-12" })
                </td>
                <td class="col-md-20">
                    @Html.TextBoxFor(model => model.FromDate, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FromDate, "", new { @class = "text-danger" })
                </td>

                <td class="form-group">
                    @Html.LabelFor(model => model.TillDate, htmlAttributes: new { @class = "control-label col-md-12" })
                </td>
                <td class="col-md-20">
                    @Html.TextBoxFor(model => model.TillDate, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TillDate, "", new { @class = "text-danger" })
                </td>
            </tr>
            <tr style="align-content:center">
                <td></td>

                <td>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="OK" name="OK" id="OK" class="btn btn-success" />
                        </div>
                    </div>
                </td>
                <td>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Cancel" name="Cancel" class="btn btn-primary" />
                        </div>
                    </div>
                </td>
            </tr>
        </table>


        <table class="table table-striped table-hover">
            <thead>
                <tr>
                    <th>Bill No.</th>
                    <th>Date</th>
                    <th>Settlement</th>
                    <th>Consultant</th>
                    <th>Type</th>
                    <th>Stock Type</th>
                    <th>Script Name</th>
                    <th>Qty.</th>
                    <th>Gross Rate</th>
                    <th>Brokerage Rate</th>
                    <th>Brok_Amt</th>
                    <th>Net Rate</th>
                    <th>Net Amount</th>
                    <th>Member Name</th>
                    <th>Member Code</th>
                    <th>Broker Name</th>
                    <th>Broker Code</th>
                </tr>
            </thead>
        </table>

    </div>

    }

@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@

<link href="~/Content/bootstrap-datepicker.min.css" rel="stylesheet" />
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="~/Scripts/jquery-1.12.4.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script>
        $(document).ready(function () {
            $("#FromDate").datepicker({
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                changeYear: true,
                //showOn: "both",
                //   buttonText : "Select"
                //  buttonText: "<i class='fa glyphicon-calendar'></i>"
            });
            $("#TillDate").datepicker({
                dateFormat: "dd-mm-yy",
                changeMonth: true,
                changeYear: true
            });
        });


        $(document).ready(function () {
            $('#tblimport').hide();
            $('#tblconfig').hide();
          
            $('#Import').click(function () {
                e.preventDefault();
                $('#tblimport').show();
                $('#tblconfig').hide();
                commit();
            });
            $('#Config').click(function (e) {
                e.preventDefault();
                $('#tblconfig').show();
                $('#tblimport').hide();
                commit();
            });
        });


        function fnConfig()
        {
            var config = document.getElementById('Config').value;
           

        }

        //$(document).ready(function () {
        //    $('#tblconfig').hide();
        //    $('#Config').click(function () {
        //        $('#tblconfig').show();
        //    });
        //})
    </script>


}
